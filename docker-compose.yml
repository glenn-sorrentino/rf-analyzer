services:
  hackrf-manager:
    image: debian:stable-slim
    profiles: ["sweep"]
    privileged: true
    network_mode: host
    restart: unless-stopped
    devices:
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - /mnt/iqdata:/mnt/iqdata
    command:
      - bash
      - -lc
      - |
          set -euo pipefail
          export DEBIAN_FRONTEND=noninteractive

          apt-get update -qq
          apt-get install -y --no-install-recommends -qq hackrf coreutils gawk
          mkdir -p /mnt/iqdata/sweeps /mnt/iqdata/watch

          # --- tunables ---
          N_KEEP=20160
          BIN_WIDTH=100000
          SWEEP_SEC=60
          RATE=8000000
          DURATION=120
          THRESHOLD_DB=-45
          BAND_LOW=1600000000
          BAND_HIGH=1700000000
          LNA=32; VGA=24; AMP=1; BBW=10000000

          while true; do
            ts=$(date -u +%Y%m%dT%H%M%SZ)
            raw=/mnt/iqdata/sweeps/sweep_${ts}.csv
            lite=/mnt/iqdata/sweeps/sweep_${ts}_lite.csv

            echo ">> sweep ${ts}"
            timeout ${SWEEP_SEC} hackrf_sweep -f 1:6000 -w ${BIN_WIDTH} -a ${AMP} -l ${LNA} -g ${VGA} -r "$raw" || true

            awk -F', *' '{
              low=$3+0; high=$4+0; bw=$5+0;
              max=-1e9; idx=-1; sum=0; cnt=0;
              for(i=7;i<=NF;i++){ v=$i+0; sum+=v; cnt++; if(v>max){ max=v; idx=i-7 } }
              if(cnt>0){
                peak_hz = low + (idx+0.5)*bw;
                mean = sum/cnt;
                printf "%sT%sZ,%.0f,%.0f,%.2f,%d,%.0f,%.2f,%.2f\n", $1, $2, low, high, bw, cnt, peak_hz, max, mean;
              }
            }' "$raw" > "$lite" || true

            best_line=$(awk -F', *' -v lo=${BAND_LOW} -v hi=${BAND_HIGH} \
              '($2+0>=lo)&&($3+0<=hi){ printf "%.0f %.2f\n", $6+0, $7+0 }' "$lite" \
              | sort -k2,2nr | head -n1)

            [ -z "$best_line" ] && { echo "DEBUG: none-in-band; skipping"; continue; }

            echo "DEBUG: best_in_band=$best_line threshold=$THRESHOLD_DB"

            peak_hz=$(echo "$best_line" | awk '{print $1}')
            peak_db=$(echo "$best_line" | awk '{print $2}')

            if [ -n "$peak_db" ] && awk -v p="$peak_db" -v t="${THRESHOLD_DB}" 'BEGIN{exit (p>t)?0:1}'; then
              echo "TRIGGER: peak ${peak_db} dB at ${peak_hz} Hz â€” capturing ${DURATION} s IQ"
              cap_ts=$(date -u +%Y%m%dT%H%M%SZ)
              out=/mnt/iqdata/watch/trigger_${cap_ts}_${peak_hz}.iq
              hackrf_transfer -r "$out" -f "$peak_hz" -s "$RATE" -a $AMP -l $LNA -g $VGA -b $BBW \
                -n $(($RATE*2*$DURATION)) || echo 'capture failed (continuing)'
            fi

            ls -1tr /mnt/iqdata/sweeps/sweep_*.csv      | head -n -${N_KEEP} | xargs -r rm -f
            ls -1tr /mnt/iqdata/sweeps/sweep_*_lite.csv | head -n -${N_KEEP} | xargs -r rm -f
            find /mnt/iqdata/watch -type f -name 'trigger_*.iq' -printf '%T+ %p\n' \
              | sort | head -n -${N_KEEP} | cut -d' ' -f2- | xargs -r rm -f
          done
